/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library;

import Booksale.booksale;
import admin.adminDashboard;
import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Administrator
 */
public class bookreport extends javax.swing.JFrame {

    /**
     * Creates new form bookreport
     */
    public bookreport() {
        initComponents();
        Connect();
        Category();
        Author();
        Publisher();
        Book_Load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Book Name", "Category", "Author", "Publisher", "Content", "Pages", "Edition", "Price"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 550, 350);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 70, 570, 370);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("BOOK LIST");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 20, 160, 40);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("BACK");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(540, 40, 34, 14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     public class CategoryItem{
        int id;
        String name;
        
        public CategoryItem(int id, String name){
            
            this.id = id;
            this.name = name;
            
        }
        public String toString(){
            return name;
        } 
    }
      
       public class AuthorItem{
        int id;
        String name;
        
        public AuthorItem(int id, String name){
            
            this.id = id;
            this.name = name;
            
        }
        public String toString(){
            return name;
        } 
    }
        public class PublisherItem{
        int id;
        String name;
        
        public PublisherItem(int id, String name){
            
            this.id = id;
            this.name = name;
            
        }
        public String toString(){
            return name;
        } 
    }
        
     Connection con;
    PreparedStatement pat;
    ResultSet rst;
    
    public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost/sample_dbs", "root", "");
            } catch (SQLException ex) {
                Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
           
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    public void Category(){
        try {
            pat = con.prepareStatement("SELECT * FROM category");
             rst = pat.executeQuery();
             
        } catch (SQLException ex) {
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Author(){
        try {
            pat = con.prepareStatement("SELECT * FROM author");
             rst = pat.executeQuery();
         
        } catch (SQLException ex) {
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    public void Publisher(){
        try {
            pat = con.prepareStatement("SELECT * FROM publisher");
             rst = pat.executeQuery();
            
             
        } catch (SQLException ex) {
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
  
     public void Book_Load(){
  
        int c;
        
        try {
            pat = con.prepareStatement("SELECT b.id, b.book, c.catname, a.name,p.name,b.content,b.pages, b.edition, b.price from book b JOIN category c ON b.category = c.id JOIN author a on b.author  = a.id JOIN publisher p ON b.publisher = p.id ");
            rst = pat.executeQuery();
            
            ResultSetMetaData rsd = rst.getMetaData();
            c = rsd.getColumnCount();
            
            DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            d.setRowCount(0);
            
            while(rst.next()){
                Vector v2 = new Vector();
                for(int i = 1; i<= c; i++ ){
                    v2.add(rst.getString("b.id"));
                    v2.add(rst.getString("b.book"));
                    v2.add(rst.getString("c.catname"));
                    v2.add(rst.getString("a.name"));
                    v2.add(rst.getString("p.name"));
                    v2.add(rst.getString("b.content"));
                    v2.add(rst.getString("b.pages"));
                    v2.add(rst.getString("b.edition"));
                    v2.add(rst.getString("b.price"));
                }
                d.addRow(v2);
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        
    }
     
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
   DefaultTableModel d1 = (DefaultTableModel) jTable1.getModel();
       int selectIndex = jTable1.getSelectedRow();
       if (selectIndex != -1) {
       int idd = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
       try {
        pat = con.prepareStatement("SELECT * FROM book WHERE id = ?");
        pat.setInt(1, idd);
        ResultSet rs = pat.executeQuery();
        if (rs.next()) {
            String bookname = rs.getString("book");
            String category = rs.getString("category");
            String author = rs.getString("author");
            String publisher = rs.getString("publisher");
            String content = rs.getString("content");
            String pages = rs.getString("pages");
            String edition = rs.getString("edition");
            String price = rs.getString("price");
        } else {
            
            JOptionPane.showMessageDialog(null, "");
          }
          } catch (SQLException ex) {
          Logger.getLogger(bookreport.class.getName()).log(Level.SEVERE, null, ex);
             }
             }else {
           JOptionPane.showMessageDialog(null, "");
        }
            
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       adminDashboard adv = new adminDashboard();
       adv.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookreport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookreport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
